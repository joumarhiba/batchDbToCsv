<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/batch
      http://www.springframework.org/schema/batch/spring-batch-2.2.xsd 
      http://www.springframework.org/schema/beans 
      http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
      http://www.springframework.org/schema/context 
      http://www.springframework.org/schema/context/spring-context-3.2.xsd 
      http://www.springframework.org/schema/util 
      http://www.springframework.org/schema/util/spring-util-3.2.xsd 
      http://www.springframework.org/schema/aop 
      http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">

	<!-- ******************************************************************************** -->
	<!-- Référence aux fichiers *.properties référencés par l'attribut location 
		et séparés par des virgules -->
	<!-- contenant des variables accessibles par la suite via ${} -->
	<!-- ******************************************************************************** -->
	<context:annotation-config />
	<context:property-placeholder
		location="classpath:filesLocation.properties,
          classpath:application.properties"
		ignore-unresolvable="true" />
	<import resource="datasource.xml" />
<!-- 	<import resource="reader.xml" /> -->
<!-- 	<import resource="writer.xml" /> -->
<!-- 	<import resource="iad.xml"/> -->

	<!-- creation de job -->
	<job id="monJob"
		xmlns="http://www.springframework.org/schema/batch" restartable="true"
		incrementer="autoIncrementer">
		
<!-- 		  <batch:listeners> -->
<!--             <batch:listener ref="finitionJobListener" /> -->
<!--         </batch:listeners> -->
		
<!-- 		<step id="nomStep" next="nomStepSuivant"> -->
<!-- 			<tasklet ref="IdRefBeanTasklet" /> -->
<!-- 		</step> -->
		
		
		<step id="validerExistReperStep" >
			<tasklet ref="validerExistReperStepTasklet" />
		</step>

<!-- 		<step id="importPersonneStep" -->
<!-- 			xmlns="http://www.springframework.org/schema/batch"> -->
<!-- 			<tasklet> -->
<!-- 				Définition d'un chunk (cf.commit-interval) pouvant ignorer jusqu'à 
<!-- 					(skip-limit) exceptions lancées durant le traitement -->
<!-- 				<chunk reader="personneItemReader" writer="personneItemWriter" -->
<!-- 					commit-interval="${commit-interval}" > -->


<!-- 				</chunk> -->

<!-- 				<listeners> -->
<!-- 					<listener ref="headerPersonneSetMapper" /> -->
<!-- 					<listener ref="personneFieldSetMapper" /> -->
<!-- 				</listeners> -->
<!-- 			</tasklet> -->
<!-- 		</step> -->





	</job>


	<bean id="validerExistReperStepTasklet"
		class="fr.cnamts.ex.batch.tasklet.ValiderExistReperTasklet">
<!-- 		injecter le chemin de repertoire -->
<!-- <property name="nomInjection" -->
<!-- 			value="${nomVariableProperties}" /> -->
	
	</bean>
<bean id="finitionJobListener"
        class="fr.cnamts.ex.batch.listener.FinitionJobListener">
    </bean>

	<!-- Incrementer par défaut -->
	<bean id="autoIncrementer"
		class="org.springframework.batch.core.launch.support.RunIdIncrementer" />
	<!-- Paramétrage du job laucher responsable de l'execution du job -->
	<bean id="jobLauncher"
		class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
	</bean>
</beans>